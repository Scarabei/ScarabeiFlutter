def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.3'

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.jfixby.scarabei.flutter.scarabeiflutterexample"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled = true
    }

    dexOptions {
        javaMaxHeapSize "4g" //specify the heap size for the dex process
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    configurations {
        all*.exclude group: "com.github.Scarabei.Flutter", module: "flutter-api"


    }
}

flutter {
    source '../..'
}

ext {
    scarabeiVersion = "2.1.1"
    scarabeiFlutterVersion = "B.0.2"

}

dependencies {
    androidTestCompile 'com.android.support:support-annotations:25.4.0'
    androidTestCompile 'com.android.support.test:runner:0.5'

    androidTestCompile 'com.android.support.test:rules:0.5'

    compile 'com.android.support:multidex:1.0.1'


    compile "com.github.Scarabei.Scarabei:scarabei-red-android:$scarabeiVersion"
    compile "com.github.Scarabei.ScarabeiFlutter:scarabei-flutter-red:$scarabeiFlutterVersion"
    compile "com.github.Scarabei.ScarabeiFlutter:scarabei-flutter-test:$scarabeiFlutterVersion"


}
